name: Linter GitHub Action

on:
  push:
    branches-ignore: [ga-ignore-**, gh-pages]
    paths:
      - '**.c'
      - '**.h'
      - '.github/workflows/linter.yml'

permissions:
  contents: write

jobs:
  lint_code:
    name: Lint with clang-format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Restore clang-format .deb cache
        uses: actions/cache@v4
        with:
          path: .apt-cache
          key: ${{ runner.os }}-apt-cache-clang-format-v1
          restore-keys: |
            ${{ runner.os }}-apt-cache-clang-format-

      - name: Prepare and download clang-format packages to workspace cache
        run: |
          sudo apt-get update
          mkdir -p .apt-cache
          sudo apt-get -o Dir::Cache::archives="$(pwd)/.apt-cache" install --download-only -y clang-format || true
          sudo chown -R "$(id -u):$(id -g)" .apt-cache || true

      - name: Install clang-format from local cache
        run: |
          if ls .apt-cache/*.deb 1> /dev/null 2>&1; then
            sudo dpkg -i .apt-cache/*.deb || sudo apt-get install -f -y
          else
            sudo apt-get install -y clang-format
          fi

      - name: Run clang-format on C source/header files and ensure newline at EOF
        run: |
          git ls-files -z "*.c" "*.h" | while IFS= read -rd '' f; do tail -c1 < "$f" | read -r _ || echo >> "$f"; done
          find . -iname '*.h' -o -iname '*.c' | xargs clang-format -i

      - name: Set up Git and Push changes
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "style: apply linter" || true
          git fetch origin main
          git pull --rebase origin main || true
          if ! git push origin HEAD:main; then
            echo 'Push failed - showing remote status for debugging:'
            git --no-pager log --oneline --graph --decorate --all | sed -n '1,50p'
            exit 0
          fi
